buildscript {
    repositories {

        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'eclipse'
    id 'idea'
    id 'net.minecraftforge.gradle' version '[6.0,6.2)'
    id 'org.jetbrains.kotlin.jvm' version '1.8.22'
}

apply plugin: 'org.spongepowered.mixin'

group = mod_group_id
version = mod_version

base {
    archivesName = mod_id
}

java {
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

minecraft {
    mappings channel: mapping_channel, version: mapping_version

    copyIdeResources = true

    runs {
        configureEach {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            mods {
                "${mod_id}" {
                    source sourceSets.main
                }
            }
        }

        client {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        server {
            property 'forge.enabledGameTestNamespaces', mod_id
            args '--nogui'
        }

        gameTestServer {
            property 'forge.enabledGameTestNamespaces', mod_id
        }

        data {
            workingDirectory project.file('run-data')

            args '--mod', mod_id, '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')
        }
    }
}

mixin {
    add sourceSets.main, "${mod_id}.refmap.json"

    config "${mod_id}.mixins.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    flatDir {
        dir 'libs'
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${minecraft_version}-${forge_version}"

    /*
     *  dependencies not included; add them manually to 'libs/'
     */
    implementation fg.deobf("blank:the_vault-1.18.2:3.15.2.3428")
    runtimeOnly    fg.deobf("blank:modular-routers-1.18.2:9.1.1-93")
    runtimeOnly    fg.deobf("blank:jei-1.18.2:9.7.2.1001")
    runtimeOnly    fg.deobf("blank:geckolib-forge-1.18:3.0.57")
    runtimeOnly    fg.deobf("blank:curios-forge-1.18.2:5.0.9.0")
    runtimeOnly    fg.deobf("blank:Quark:3.2-358")
    runtimeOnly    fg.deobf("blank:AutoRegLib:1.7-53")
    runtimeOnly    fg.deobf("blank:sophisticatedbackpacks-1.18.2:3.18.46.821")
    runtimeOnly    fg.deobf("blank:sophisticatedcore-1.18.2:0.5.48.244")
    runtimeOnly    fg.deobf("blank:alexsmobs:1.18.6")
    runtimeOnly    fg.deobf("blank:citadel:1.11.3-1.18.2")
    runtimeOnly    fg.deobf("blank:spark:1.9.11-forge")
    runtimeOnly    fg.deobf("blank:kotlinforforge:3.12.0-all")


    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

tasks.named('processResources', ProcessResources).configure {
    var replaceProperties = [
            minecraft_version: minecraft_version, minecraft_version_range: minecraft_version_range,
            forge_version: forge_version, forge_version_range: forge_version_range,
            loader_version_range: loader_version_range,
            mod_id: mod_id, mod_name: mod_name, mod_license: mod_license, mod_version: mod_version,
            mod_authors: mod_authors, mod_description: mod_description,
    ]

    inputs.properties replaceProperties

    filesMatching(['META-INF/mods.toml', 'pack.mcmeta']) {
        expand replaceProperties + [project: project]
    }
}

tasks.named('jar', Jar).configure {
    manifest {
        attributes([
                "Specification-Title": mod_id,
                "Specification-Vendor": mod_authors,
                "Specification-Version": "1",
                "Implementation-Title": project.name,
                "Implementation-Version": project.jar.archiveVersion,
                "Implementation-Vendor": mod_authors,
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }

    finalizedBy 'reobfJar'
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8'
}

kotlin {
    jvmToolchain(17)
}